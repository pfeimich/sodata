name: CI/CD

on:
  workflow_dispatch:
  push:
    paths-ignore:
      - '**.md'

jobs:
  build-native:
    env:
      DOCKER_ACCOUNT: sogis
      DOCKER_REPO: sodata
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
      BUILD_NUMBER: ${{ github.run_number }}
      MAJOR_NUMBER: "0"
      MINOR_NUMBER: "0"

    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write

    steps:
      - name: Print new build number
        run: echo "Build number is $BUILD_NUMBER"

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'     
          distribution: 'graalvm' #graalvm-community
          github-token: ${{ secrets.GITHUB_TOKEN }}
          cache: 'maven'

      - name: Test and build Jar
        run: |
          ./mvnw clean test -DexcludedGroups="docker"
          ./mvnw -Penv-prod,native clean package -DexcludedGroups="docker"
          ls -la sodata-server/target

      - name: List Docker images
        run: |
          docker images

      - name: Test Docker image
        id: dockerTest
        run: ./mvnw test -Dgroups="docker"

      # - uses: actions/cache@v3
      #   with:
      #     path: ~/.m2/repository
      #     key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      #     restore-keys: |
      #       ${{ runner.os }}-maven-

      # - uses: graalvm/setup-graalvm@v1
      #   with:
      #     version: '22.2.0'
      #     java-version: '17'
      #     components: 'native-image'
      #     #native-image-musl: 'true'
      #     github-token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Build native image
      #   run: |
      #     export CONFIG_FILE=$PWD/sodata-server/src/test/resources/datasearch.xml 
      #     export ITEMS_GEOJSON_DIR=/tmp/
      #     ./mvnw versions:set -DnewVersion=${{ env.VERSION }}
      #     ./mvnw -Pnative test
      #     ./mvnw -DskipTests -Penv-prod,native package
      #     ls -la sodata-server/target

      # - name: Set up QEMU for amd64
      #   uses: docker/setup-qemu-action@v2
      #   with:
      #     platforms: linux/amd64

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v2

      # - name: Login to Docker Container Registry
      #   uses: docker/login-action@v2
      #   with:
      #     username: ${{ env.DOCKER_USERNAME }}
      #     password: ${{ env.DOCKER_PASSWORD }}
      #   if: ${{ (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request') && !env.ACT }}

      # - name: Login to GitHub Container Registry
      #   uses: docker/login-action@v2
      #   with:
      #     registry: ghcr.io
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}
      #   if: ${{ (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request') && !env.ACT }}

      # - name: Build and push to hub.docker.com
      #   uses: docker/build-push-action@v2
      #   with:
      #     platforms: linux/amd64
      #     context: sodata-server
      #     file: sodata-server/Dockerfile.native-alpaquita
      #     labels: ${{ steps.meta.outputs.labels }}
      #     pull: true
      #     push: ${{ (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request') && !env.ACT }}
      #     tags: |
      #       ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
      #       ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION }}
      #       ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0.0
      #       ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0
      #       ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
      #       ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION }}
      #       ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0.0
      #       ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0

  # build-jvm:
  #   env:
  #     DOCKER_ACCOUNT: sogis
  #     DOCKER_REPO: sodata-jvm
  #     DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
  #     DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}} 
  #     BUILD_NUMBER: ${{ github.run_number }}
  #     VERSION: 0.0.${{ github.run_number }}

  #   runs-on: ubuntu-latest

  #   permissions:
  #     contents: read
  #     packages: write

  #   steps:

  #     - name: Print new build number
  #       run: echo "Build number is $BUILD_NUMBER"

  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-java@v3
  #       with:
  #         distribution: 'liberica'
  #         java-version: '17'
  #         cache: 'maven'

  #     - name: Test and build Jar
  #       run: |
  #         ./mvnw versions:set -DnewVersion=${{ env.VERSION }}
  #         ./mvnw clean test
  #         ./mvnw clean -DskipTests -Penv-prod package
  #         ls -la sodata-server/target

  #     - name: Set up QEMU for amd64 and arm64
  #       uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480  # v1.2.0 (2021-10-22)
  #       with:
  #         platforms: linux/amd64,linux/arm64

  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25  # v1.6.0 (2021-10-22)

  #     - name: Login to Docker Container Registry
  #       uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9  # v1.10.0 (2021-10-22)
  #       with:
  #         username: ${{ secrets.DOCKER_USERNAME }}
  #         password: ${{ secrets.DOCKER_PASSWORD }}
  #       if: ${{ (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request') && !env.ACT }}

  #     - name: Login to GitHub Container Registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #       if: ${{ (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request') && !env.ACT }}

  #     - name: Multi-platform build and push to Docker Container Registry
  #       uses: docker/build-push-action@a66e35b9cbcf4ad0ea91ffcaf7bbad63ad9e0229  # v2.7.0 (2021-10-22)
  #       with:
  #         platforms: linux/amd64,linux/arm64
  #         context: sodata-server
  #         file: sodata-server/Dockerfile.jvm
  #         labels: ${{ steps.meta.outputs.labels }}
  #         pull: true
  #         push: ${{ (github.ref == 'refs/heads/master') && (github.event_name != 'pull_request') && !env.ACT }}
  #         tags: |
  #           ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
  #           ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION }}
  #           ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0.0
  #           ${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0
  #           ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:latest
  #           ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:${{ env.VERSION }}
  #           ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0.0
  #           ghcr.io/${{ env.DOCKER_ACCOUNT }}/${{ env.DOCKER_REPO }}:0
